[uwsgi]
# 直接作web服务器使用
# http = 127.0.0.1:8888

# 指定与Nginx通信的方式，不影响uwsgi本身运行。如果配置了需要到nginx中进行相关配置-才能通过nginx访问Django
socket = 127.0.0.1:8887

# 启动一个master进程，来管理其余的子进程
master = True
processes = 4
threads = 2

# python虚拟环境目录绝对路径。如果有的话，home是虚拟环境根目录，PYTHNONHOME是虚拟环境下的bin目录（放置了Python执行文件）
home = /Users/damonmok/Desktop/dailyfresh_src/venv
PYTHONHOME = /Users/damonmok/Desktop/dailyfresh_src/venv/bin

# django项目目录，与manager.py同级
chdir = /Users/damonmok/Desktop/dailyfresh_src/dailyfresh

# 主应用中的wsgi，下面这种配法是在Django根目录下运行uwsgi有效，主APP名为有settings.py的那个目录名。如果是其他目录运行，下面建议写成绝对路径。
wsgi-file = dailyfresh/wsgi.py

# 服务停止时自动移除unix Socket和pid文件
vacuum = true

# 设置每个工作进程处理请求的上限，达到上限时，将回收（重启）进程，可以预防内存泄漏
max-requests=5000

# 设置后台运行保存日志。只要配置了daemonize就会让uwsgi后台运行，同时将日志输出到指定目录
daemonize= uwsgi2.log

# 保存主进程的pid，用来控制uwsgi服务
pidfile=uwsgi2.pid
#uwsgi --stop/reload xxx.pid 停止/重启uwsgi

# 静态文件映射
# static-map = /static=/Users/damonmok/Desktop/dailyfresh_src/dailyfresh/static